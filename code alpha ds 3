{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1506464,"sourceType":"datasetVersion","datasetId":887178}],"dockerImageVersionId":30698,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"<div style=\"background-color:#f9f9f9; border:2px solid #1f497d; border-radius:10px; padding:20px;\">\n<h1 style=\"color:#1f497d; text-align:center; font-weight:bold; padding:10px;\">Predictive Modeling with Linear Regression</h1>\n<h2 style=\"color:#1f497d; text-align:center;\">Auto Insurance in Sweden</h2>\n</div>\n","metadata":{}},{"cell_type":"markdown","source":"![](https://s3-media0.fl.yelpcdn.com/bphoto/IAAnjz_eCoZ2-vBfrQ4DRQ/348s.jpg)","metadata":{}},{"cell_type":"markdown","source":"<div style=\"background-color:#ffffff; color:#1f497d; border:2px solid #1f497d; border-radius:10px; padding:20px;\">\n  <h1 style=\"color:#1f497d; text-align:left; font-weight:bold;\">About Dataset</h1>\n  <p>The dataset contains information on auto insurance claims across different geographical zones in Sweden. It comprises two main variables:</p>\n  <ul>\n    <li><strong>X:</strong> Number of claims</li>\n    <li><strong>Y:</strong> Total payment for all claims in thousands of Swedish Kronor</li>\n  </ul>\n  <p>The data was collected and compiled by the Swedish Committee on Analysis of Risk Premium in Motor Insurance. The exact time period represented by the data is unspecified.</p>\n  <hr>\n  <h1 style=\"color:#1f497d; text-align:left; font-weight:bold;\">Content</h1>\n  <p>Beyond its tabular format, this dataset offers valuable insights for insurance risk assessment and management.</p>\n  <hr>\n  <h1 style=\"color:#1f497d; text-align:left; font-weight:bold;\">Acknowledgements</h1>\n  <p>We express gratitude to the Swedish Committee on Analysis of Risk Premium in Motor Insurance for providing this dataset.</p>\n  <p>Reference link to the dataset: <a href=\"http://college.hmco.com/mathematics/brase/understandable_statistics/7e/students/datasets/slr/frames/frame.html\">Swedish Committee on Analysis of Risk Premium in Motor Insurance</a></p>\n  <hr>\n  <h1 style=\"color:#1f497d; text-align:left; font-weight:bold;\">Inspiration</h1>\n  <p>This dataset presents a unique opportunity for the data science community to explore various facets of auto insurance. Potential questions for analysis include:</p>\n  <ul>\n    <li>How does the number of claims correlate with the total payment?</li>\n    <li>Can we accurately predict the total payment based on the number of claims?</li>\n    <li>Are there discernible geographical patterns in the data that could inform insurance pricing strategies?</li>\n  </ul>\n  <p>Let's delve into the data and leverage predictive modeling techniques, specifically linear regression, to uncover actionable insights.</p>\n</div>\n","metadata":{}},{"cell_type":"markdown","source":"<div style=\"float:left; width:200px; background-color:#f9f9f9; border:2px solid #1f497d; border-radius:10px; padding:10px;\">\n<h4 style=\"color:#1f497d; text-align:center; font-weight:bold;\"> Import Libraries</h4>\n</div>\n","metadata":{}},{"cell_type":"code","source":"# import libraries\nimport pandas as pd \nimport seaborn as sns \nimport matplotlib.pyplot as plt \nimport numpy as np \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","metadata":{"execution":{"iopub.status.busy":"2024-05-02T15:44:08.302095Z","iopub.execute_input":"2024-05-02T15:44:08.30249Z","iopub.status.idle":"2024-05-02T15:44:11.078241Z","shell.execute_reply.started":"2024-05-02T15:44:08.302459Z","shell.execute_reply":"2024-05-02T15:44:11.077128Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<div style=\"float:left; width:200px; background-color:#f9f9f9; border:2px solid #1f497d; border-radius:10px; padding:10px;\">\n<h4 style=\"color:#1f497d; text-align:center; font-weight:bold;\"> Import Dataset</h4>\n</div>\n","metadata":{}},{"cell_type":"code","source":"# import datset\ndf = pd.read_csv('/kaggle/input/auto-insurance-in-sweden/swedish_insurance.csv')\ndf.head(3)","metadata":{"execution":{"iopub.status.busy":"2024-05-02T15:44:20.145719Z","iopub.execute_input":"2024-05-02T15:44:20.146292Z","iopub.status.idle":"2024-05-02T15:44:20.196815Z","shell.execute_reply.started":"2024-05-02T15:44:20.146258Z","shell.execute_reply":"2024-05-02T15:44:20.195652Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# rename of columns X and Y \ndf.rename(columns={'X':'Claims', 'Y':'Payment'},inplace=True)\ndf.head(3)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# check   datset is linear ?\nplt.figure(figsize=(5,4))\nsns.scatterplot(x='Claims',y='Payment',data=df)\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.describe()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# check null values \nprint('Null values in dataset:\\n',df.isnull().sum())\n# check duplicats\nprint('Duplicate values in dataset:',df.duplicated().sum())","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<div style=\"float:left; width:200px; background-color:#f9f9f9; border:2px solid #1f497d; border-radius:10px; padding:10px;\">\n<h4 style=\"color:#1f497d; text-align:center; font-weight:bold;\"> Box plot </h4>\n</div>\n","metadata":{}},{"cell_type":"code","source":"# check outliers\nplt.figure(figsize=(10,6))\ndf.boxplot()\nplt.title('Box plot of Data')\nplt.ylabel('values')\nplt.grid(True)\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<div style=\"float:left; width:200px; background-color:#f9f9f9; border:2px solid #1f497d; border-radius:10px; padding:10px;\">\n<h4 style=\"color:#1f497d; text-align:center; font-weight:bold;\"> Histogram</h4>\n</div>\n","metadata":{}},{"cell_type":"code","source":"# hisplot of columns\nplt.figure(figsize=(10,8))\nplt.subplot(2,1,1)\nsns.histplot(df['Claims'],kde=True)\nplt.subplot(2,1,2)\nsns.histplot(df['Payment'], kde=True)\nplt.tight_layout()\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<div style=\"float:left; width:200px; background-color:#f9f9f9; border:2px solid #1f497d; border-radius:10px; padding:10px;\">\n<h4 style=\"color:#1f497d; text-align:center; font-weight:bold;\"> Handling Outliers</h4>\n</div>\n","metadata":{}},{"cell_type":"code","source":"# handle outliers\n# remove outliers form Claims column\nmin_range_cl=df['Claims'].mean()-3*df['Claims'].std()\nmax_range_cl=df['Claims'].mean()+3*df['Claims'].std()\ndf[df['Claims']<=max_range_cl]\n# remove outliers form Payment column\nmin_range_py=df['Payment'].mean()-3*df['Payment'].std()\nmax_range_py=df['Payment'].mean()+3*df['Payment'].std()\ndf[df['Payment']<=max_range_py]\n","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<div style=\"float:left; width:200px; background-color:#f9f9f9; border:2px solid #1f497d; border-radius:10px; padding:10px;\">\n<h4 style=\"color:#1f497d; text-align:center; font-weight:bold;\"> Modelling</h4>\n</div>\n","metadata":{}},{"cell_type":"code","source":"# split data into X and y\nX=df[['Claims']]\ny=df['Payment']\n# split data into train and test sets\nX_train, X_test, y_train, y_test=train_test_split(X,y , test_size= 0.2, random_state=42)\nmodel=LinearRegression()\nmodel.fit(X_train,y_train)\ny_pred = model.predict(X)\nprint('Accuracy Score:',model.score(X_test,y_test)*100,'%')\n","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(5,4))\nsns.scatterplot(x='Claims',y='Payment',data=df)\nplt.plot(df['Claims'],y_pred, color='Red')\nplt.legend(['org_data','pred_line'])\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"markdown","source":"![](https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT7YKGUNlOZSLVE-Tg0hTZxsDLe0sWWl0c7HdqeW7f1bQ&s)","metadata":{}}]}